@model GrozaNews.Models.News
@using Microsoft.AspNet.Identity;

@{
    ViewBag.Title = "Afisare stire";
}
@if (@TempData.ContainsKey("message"))
{
    <h2 class="edit_message">@TempData["message"]</h2>
}

<h2>@ViewBag.Title</h2>

<div class="panel-heading article-heading">
    <span class="font-roboto article-title">@Model.Title</span>
</div>

<div class="panel-body">
    <img src="@Url.Action("GetImage", "News", new { Model.NewsId })" alt="News Image" style="height: 300px; width:100%" />
    <div class="article-content-wrapper">
        @Html.Raw(Model.Content)
    </div>
</div>
<div class="article-meta">
    <span class="">
        <i class="glyphicon glyphicon-time"></i>
        @Model.Date
    </span>
    <div>
        <i class="glyphicon glyphicon-bookmark"></i>
        @Model.Category.CategoryName
    </div>
    <div>
        <i class="glyphicon glyphicon-user"></i>
        <strong> @Model.User.Email.Split('@')[0] </strong>
    </div>
</div>

@*<h2>@Model.Title</h2>
    <h2>@Model.NewsId</h2>
    <p>@Model.Content</p>
    <img src="@Url.Action("GetImage", "News", new { @Model.NewsId })" alt="News Image" />
    <p>@Model.Date</p>*@
<br />
<br />

<h2>Comentarii</h2>

@foreach (var comment in Model.Comments)
{
    if (TempData.ContainsKey("inEditMode") && TempData.ContainsKey("commentInEditMode") && comment.CommentId == (int)TempData["commentInEditMode"])
    {
        @Html.Partial("_editComment", comment);
    }
    else
    {
        <div class="panel-heading article-heading">
            <span class="font-roboto article-title">@comment.User.Email.Split('@')[0]</span>
        </div>

        <div class="panel-body">

            <div class="article-content-wrapper">
                @Html.Raw(comment.Content)
            </div>

        </div>

        <div class="article-meta">
            <span class="">
                <i class="glyphicon glyphicon-time"></i>
                @comment.Date
            </span>
        </div>
    }
    if (User.Identity.GetUserId() == comment.UserId || User.IsInRole("Administrator"))
    {
        if (!(TempData.ContainsKey("inEditMode") && TempData.ContainsKey("commentInEditMode") && comment.CommentId == (int)TempData["commentInEditMode"]))
        {
            <div class="panel-footer article-panel-footer around">
                <a class="btn btn-info" href="/Comment/Edit/@comment.CommentId">Editare comentariu</a>
                <form method="post" action="/Comment/Delete/@comment.CommentId">
                    @Html.HttpMethodOverride(HttpVerbs.Delete)
                    <button class="btn btn-danger" type="submit">Sterge comentariu</button>
                </form>
            </div>

        }
    }








    @*if (User.Identity.GetUserId() == comment.UserId || User.IsInRole("Administrator"))
        {
            if (TempData.ContainsKey("inEditMode") && TempData.ContainsKey("commentInEditMode") && comment.CommentId == (int)TempData["commentInEditMode"])
            {
                    @Html.Partial("_editComment", comment);
                }
                else
                {
                    <a class="btn btn-success" href="/Comment/Edit/@comment.CommentId">Editare comentariu</a>
                    <form method="post" action="/Comment/Delete/@comment.CommentId">
                        @Html.HttpMethodOverride(HttpVerbs.Delete)
                        <button class="btn-danger" type="submit">Sterge comentariu</button>
                    </form>
                }
            }
            else
            {
                <div class="panel-heading article-heading">
                    <span class="font-roboto article-title">@comment.User.Email.Split('@')[0]</span>
                </div>

                <div class="panel-body">

                    <div class="article-content-wrapper">
                        @Html.Raw(comment.Content)
                    </div>

                </div>

                <div class="article-meta">
                    <span class="">
                        <i class="glyphicon glyphicon-time"></i>
                        @comment.Date
                    </span>
                </div>

                <div class="panel-footer article-panel-footer around">

                </div>
            }
            <div class="panel-heading article-heading">
                <span class="font-roboto article-title">@comment.User.Email.Split('@')[0]</span>
            </div>

            <div class="panel-body">

                <div class="article-content-wrapper">
                    @Html.Raw(comment.Content)
                </div>

            </div>

            <div class="article-meta">
                <span class="">
                    <i class="glyphicon glyphicon-time"></i>
                    @comment.Date
                </span>
            </div>

            <div class="panel-footer article-panel-footer around">
                <a class="btn btn-success" href="/Comment/Edit/@comment.CommentId">Editare comentariu</a>
                <form method="post" action="/Comment/Delete/@comment.CommentId">
                    @Html.HttpMethodOverride(HttpVerbs.Delete)
                    <button type="submit">Sterge comentariu</button>
                </form>
            </div>*@

    @*@Html.Label("UserId", "Autor comentariu:")
        <p>@comment.User.Email</p>
        <p>@comment.Content</p>

        if (User.Identity.GetUserId() == comment.UserId || User.IsInRole("Administrator"))
        {
            if (TempData.ContainsKey("inEditMode") && TempData.ContainsKey("commentInEditMode"))
            {
                @Html.Partial("_editComment", comment);
            }
            else
            {
                <a class="btn btn-success" href="/Comment/Edit/@comment.CommentId">Editare comentariu</a>
                <form method="post" action="/Comment/Delete/@comment.CommentId">
                    @Html.HttpMethodOverride(HttpVerbs.Delete)
                    <button type="submit">Sterge comentariu</button>
                </form>
            }
        }*@
    <br />
    <hr />
    <br />
}









@if (Request.IsAuthenticated)
{
    <form method="post" action="/Comment/New">

        <textarea class="autoExpand forumPost form-control" rows="4" data-min-rows="4" name="Content" placeholder="Scrie comentariu nou"></textarea>

        <input type="hidden" name="Date" value="@DateTime.Now" />
        <input type="hidden" name="NewsId" value="@Model.NewsId" />

        <div class="panel-footer article-panel-footer around">
            <button class="btn btn-info" type="submit">Adauga comentariu</button>
        </div>
    </form>
}

<br />

<div class="panel-footer article-panel-footer around" style="background-color:white">

    @if (User.IsInRole("Administrator") || (User.IsInRole("Editor") && User.Identity.GetUserId() == Model.UserId))
    {
        <a class="btn btn-info" style="margin-top:20px" href="/News/Edit/@Model.NewsId">Editare stire</a>
        <form method="post" action="/News/Delete/@Model.NewsId">
            @Html.HttpMethodOverride(HttpVerbs.Delete)
            <button class="btn btn-danger" style="margin-top:20px" type="submit">Sterge stire</button>
        </form>

    }
    <a class="btn btn-info" style="margin-top:20px" href="/News/Index">Inapoi la stiri</a>

    @if (User.IsInRole("Editor") || User.IsInRole("Administrator"))
    {
        <a class="btn btn-info" style="margin-top:20px" href="/News/New">Adauga stire</a>
    }

</div>


@*<div class="panel-footer article-panel-footer around" style="background-color:white">

  
    <a class="btn btn-info"  style="margin-top:20px"  href="/News/Index">Inapoi la stiri</a>

    @if (User.IsInRole("Editor") || User.IsInRole("Administrator"))
    {
        <a class="btn btn-info"  style="margin-top:20px"  href="/News/New">Adauga stire</a>
    }
</div>*@

@*<a href="/News/Index">Inapoi la stiri</a>

    @if (User.IsInRole("Editor") || User.IsInRole("Administrator"))
    {
        <br />
        <a href="/News/New">Adauga stire</a>
    }
    <br />*@
